//! WARNING: This file was derived by the `spec-gen` utility. DO NOT EDIT MANUALLY.
pub use crate::primitives::*;
pub use crate::signing::*;
pub use crate::state_transition::{Result, Context, Validation};
pub use crate::error::*;
use std::mem;
use std::collections::{HashSet, HashMap};
use std::iter::zip;
use crate::ssz::prelude::*;
use integer_sqrt::IntegerSquareRoot;
use crate::crypto::{
    hash, fast_aggregate_verify, eth_aggregate_public_keys, eth_fast_aggregate_verify,
};
pub use crate::deneb::blob_sidecar::VERSIONED_HASH_VERSION_KZG;
pub use crate::altair::constants::TIMELY_SOURCE_FLAG_INDEX;
pub use crate::altair::constants::TIMELY_TARGET_FLAG_INDEX;
pub use crate::altair::constants::TIMELY_HEAD_FLAG_INDEX;
pub use crate::altair::constants::TIMELY_SOURCE_WEIGHT;
pub use crate::altair::constants::TIMELY_TARGET_WEIGHT;
pub use crate::altair::constants::TIMELY_HEAD_WEIGHT;
pub use crate::altair::constants::SYNC_REWARD_WEIGHT;
pub use crate::altair::constants::PROPOSER_WEIGHT;
pub use crate::altair::constants::WEIGHT_DENOMINATOR;
pub use crate::altair::constants::PARTICIPATION_FLAG_WEIGHTS;
pub use crate::altair::constants::SYNC_COMMITTEE_SUBNET_COUNT;
pub use crate::phase0::constants::BASE_REWARDS_PER_EPOCH;
pub use crate::phase0::constants::DEPOSIT_CONTRACT_TREE_DEPTH;
pub use crate::phase0::constants::JUSTIFICATION_BITS_LENGTH;
pub use crate::phase0::constants::DEPOSIT_DATA_LIST_BOUND;
pub use crate::capella::light_client::EXECUTION_PAYLOAD_INDEX;
pub use crate::capella::light_client::EXECUTION_PAYLOAD_INDEX_FLOOR_LOG_2;
pub use crate::altair::light_client::FINALIZED_ROOT_INDEX;
pub use crate::altair::light_client::FINALIZED_ROOT_INDEX_FLOOR_LOG_2;
pub use crate::altair::light_client::CURRENT_SYNC_COMMITTEE_INDEX;
pub use crate::altair::light_client::CURRENT_SYNC_COMMITTEE_INDEX_FLOOR_LOG_2;
pub use crate::altair::light_client::NEXT_SYNC_COMMITTEE_INDEX;
pub use crate::altair::light_client::NEXT_SYNC_COMMITTEE_INDEX_FLOOR_LOG_2;
pub use crate::deneb::beacon_block::BeaconBlockBody;
pub use crate::deneb::beacon_block::BeaconBlock;
pub use crate::deneb::beacon_block::SignedBeaconBlock;
pub use crate::phase0::beacon_block::BeaconBlockHeader;
pub use crate::phase0::beacon_block::SignedBeaconBlockHeader;
pub use crate::deneb::beacon_state::BeaconState;
pub use crate::phase0::beacon_state::Fork;
pub use crate::phase0::beacon_state::ForkData;
pub use crate::phase0::beacon_state::HistoricalBatch;
pub use crate::phase0::beacon_state::HistoricalSummary;
pub use crate::deneb::blinded_beacon_block::BlindedBeaconBlockBody;
pub use crate::deneb::blinded_beacon_block::BlindedBeaconBlock;
pub use crate::deneb::blinded_beacon_block::SignedBlindedBeaconBlock;
pub use crate::deneb::blob_sidecar::BlobIdentifier;
pub use crate::deneb::blob_sidecar::BlobsBundle;
pub use crate::deneb::blob_sidecar::BlobSidecar;
pub use crate::capella::bls_to_execution_change::BlsToExecutionChange;
pub use crate::capella::bls_to_execution_change::SignedBlsToExecutionChange;
pub use crate::deneb::execution_engine::NewPayloadRequest;
pub use crate::deneb::execution_payload::ExecutionPayload;
pub use crate::deneb::execution_payload::ExecutionPayloadHeader;
pub use crate::bellatrix::fork_choice::PowBlock;
pub use crate::deneb::light_client::LightClientHeader;
pub use crate::deneb::light_client::LightClientBootstrap;
pub use crate::deneb::light_client::LightClientUpdate;
pub use crate::deneb::light_client::LightClientFinalityUpdate;
pub use crate::deneb::light_client::LightClientOptimisticUpdate;
pub use crate::phase0::operations::Checkpoint;
pub use crate::phase0::operations::AttestationData;
pub use crate::phase0::operations::IndexedAttestation;
pub use crate::phase0::operations::PendingAttestation;
pub use crate::phase0::operations::Attestation;
pub use crate::phase0::operations::Eth1Data;
pub use crate::phase0::operations::DepositMessage;
pub use crate::phase0::operations::DepositData;
pub use crate::phase0::operations::ProposerSlashing;
pub use crate::phase0::operations::AttesterSlashing;
pub use crate::phase0::operations::Deposit;
pub use crate::phase0::operations::VoluntaryExit;
pub use crate::phase0::operations::SignedVoluntaryExit;
pub use crate::altair::sync::SyncAggregate;
pub use crate::altair::sync::SyncCommittee;
pub use crate::altair::validator::SyncCommitteeMessage;
pub use crate::altair::validator::SyncCommitteeContribution;
pub use crate::altair::validator::ContributionAndProof;
pub use crate::altair::validator::SignedContributionAndProof;
pub use crate::altair::validator::SyncAggregatorSelectionData;
pub use crate::phase0::validator::Validator;
pub use crate::phase0::validator::Eth1Block;
pub use crate::phase0::validator::AggregateAndProof;
pub use crate::phase0::validator::SignedAggregateAndProof;
pub use crate::capella::withdrawal::Withdrawal;
pub use crate::deneb::blob_sidecar::Blob;
pub use crate::bellatrix::execution_payload::Transaction;
pub use crate::deneb::blob_sidecar::verify_blob_sidecar_inclusion_proof;
pub use crate::deneb::block_processing::process_attestation;
pub use crate::deneb::block_processing::process_execution_payload;
pub use crate::deneb::block_processing::process_voluntary_exit;
pub use crate::deneb::block_processing::process_block;
pub use crate::deneb::block_processing::process_bls_to_execution_change;
pub use crate::deneb::block_processing::process_operations;
pub use crate::deneb::block_processing::process_withdrawals;
pub use crate::deneb::block_processing::get_expected_withdrawals;
pub use crate::deneb::block_processing::add_validator_to_registry;
pub use crate::deneb::block_processing::process_sync_aggregate;
pub use crate::deneb::block_processing::process_proposer_slashing;
pub use crate::deneb::block_processing::process_attester_slashing;
pub use crate::phase0::block_processing::get_validator_from_deposit;
pub use crate::deneb::block_processing::apply_deposit;
pub use crate::deneb::block_processing::process_deposit;
pub use crate::deneb::block_processing::process_block_header;
pub use crate::phase0::block_processing::xor;
pub use crate::deneb::block_processing::process_randao;
pub use crate::deneb::block_processing::process_eth1_data;
pub use crate::deneb::epoch_processing::process_registry_updates;
pub use crate::deneb::epoch_processing::process_historical_summaries_update;
pub use crate::deneb::epoch_processing::process_epoch;
pub use crate::deneb::epoch_processing::process_slashings;
pub use crate::deneb::epoch_processing::get_base_reward;
pub use crate::deneb::epoch_processing::process_justification_and_finalization;
pub use crate::deneb::epoch_processing::process_inactivity_updates;
pub use crate::deneb::epoch_processing::process_rewards_and_penalties;
pub use crate::deneb::epoch_processing::process_participation_flag_updates;
pub use crate::deneb::epoch_processing::process_sync_committee_updates;
pub use crate::deneb::epoch_processing::process_eth1_data_reset;
pub use crate::deneb::epoch_processing::process_effective_balance_updates;
pub use crate::deneb::epoch_processing::process_slashings_reset;
pub use crate::deneb::epoch_processing::process_randao_mixes_reset;
pub use crate::deneb::epoch_processing::process_historical_roots_update;
pub use crate::deneb::epoch_processing::weigh_justification_and_finalization;
pub use crate::deneb::epoch_processing::get_proposer_reward;
pub use crate::deneb::epoch_processing::get_finality_delay;
pub use crate::deneb::epoch_processing::is_in_inactivity_leak;
pub use crate::deneb::genesis::initialize_beacon_state_from_eth1;
pub use crate::deneb::genesis::is_valid_genesis_state;
pub use crate::deneb::genesis::get_genesis_block;
pub use crate::deneb::helpers::kzg_commitment_to_versioned_hash;
pub use crate::deneb::helpers::get_attestation_participation_flag_indices;
pub use crate::deneb::helpers::get_validator_activation_churn_limit;
pub use crate::capella::helpers::has_eth1_withdrawal_credential;
pub use crate::capella::helpers::is_fully_withdrawable_validator;
pub use crate::capella::helpers::is_partially_withdrawable_validator;
pub use crate::deneb::helpers::get_inactivity_penalty_deltas;
pub use crate::deneb::helpers::slash_validator;
pub use crate::deneb::helpers::is_merge_transition_complete;
pub use crate::deneb::helpers::is_merge_transition_block;
pub use crate::deneb::helpers::is_execution_enabled;
pub use crate::deneb::helpers::compute_timestamp_at_slot;
pub use crate::altair::helpers::add_flag;
pub use crate::altair::helpers::has_flag;
pub use crate::deneb::helpers::get_next_sync_committee_indices;
pub use crate::deneb::helpers::get_next_sync_committee;
pub use crate::deneb::helpers::get_base_reward_per_increment;
pub use crate::deneb::helpers::get_unslashed_participating_indices;
pub use crate::deneb::helpers::get_flag_index_deltas;
pub use crate::phase0::helpers::is_active_validator;
pub use crate::phase0::helpers::is_eligible_for_activation_queue;
pub use crate::deneb::helpers::is_eligible_for_activation;
pub use crate::phase0::helpers::is_slashable_validator;
pub use crate::phase0::helpers::is_slashable_attestation_data;
pub use crate::deneb::helpers::is_valid_indexed_attestation;
pub use crate::deneb::helpers::verify_block_signature;
pub use crate::deneb::helpers::get_domain;
pub use crate::deneb::helpers::get_current_epoch;
pub use crate::phase0::helpers::compute_shuffled_index;
pub use crate::phase0::helpers::compute_shuffled_indices;
pub use crate::deneb::helpers::sample_proposer_index;
pub use crate::deneb::helpers::compute_proposer_index;
pub use crate::phase0::helpers::compute_committee;
pub use crate::phase0::helpers::compute_epoch_at_slot;
pub use crate::phase0::helpers::compute_start_slot_at_epoch;
pub use crate::phase0::helpers::compute_activation_exit_epoch;
pub use crate::phase0::helpers::compute_fork_digest;
pub use crate::phase0::helpers::compute_domain;
pub use crate::phase0::helpers::compute_fork_data_root;
pub use crate::deneb::helpers::get_previous_epoch;
pub use crate::deneb::helpers::get_block_root;
pub use crate::deneb::helpers::get_block_root_at_slot;
pub use crate::deneb::helpers::get_randao_mix;
pub use crate::deneb::helpers::get_active_validator_indices;
pub use crate::deneb::helpers::get_validator_churn_limit;
pub use crate::deneb::helpers::get_seed;
pub use crate::deneb::helpers::get_committee_count_per_slot;
pub use crate::deneb::helpers::get_beacon_committee;
pub use crate::deneb::helpers::get_beacon_proposer_index;
pub use crate::deneb::helpers::get_total_balance;
pub use crate::deneb::helpers::get_total_active_balance;
pub use crate::deneb::helpers::get_indexed_attestation;
pub use crate::deneb::helpers::get_attesting_indices;
pub use crate::deneb::helpers::increase_balance;
pub use crate::deneb::helpers::decrease_balance;
pub use crate::deneb::helpers::initiate_validator_exit;
pub use crate::deneb::helpers::get_eligible_validator_indices;
pub use crate::deneb::slot_processing::process_slots;
pub use crate::deneb::slot_processing::process_slot;
pub use crate::deneb::state_transition::state_transition_block_in_slot;
pub use crate::deneb::state_transition::state_transition;
